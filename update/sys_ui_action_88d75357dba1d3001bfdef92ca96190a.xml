<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="5f33c0b1dbb8df401bfdef92ca9619fd" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name/>
        <active>true</active>
        <client>false</client>
        <comments>Tricode Data Imports&#13;
</comments>
        <condition>gs.hasRole('x_4s_tricode.user');</condition>
        <form_action>true</form_action>
        <form_button>false</form_button>
        <form_context_menu>false</form_context_menu>
        <form_link>true</form_link>
        <form_style/>
        <hint/>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <name>Import</name>
        <onclick/>
        <order>100</order>
        <script><![CDATA[deleteDSAttachments();

attachFile();

runImport();

deleteCurrentAttachment();

function deleteDSAttachments(){

   var attachment = new GlideSysAttachment();

   var agr = attachment.getAllAttachments("sys_data_source", getDSSysID());

   while(agr.next()) {

   attachment.deleteAttachment(agr.getValue("sys_id"));

   }

}

function attachFile(){

   GlideSysAttachment.copy('u_bulk_load', current.sys_id, 'sys_data_source', getDSSysID());

}

function runImport(){

   var rec = new GlideRecord('scheduled_import_set');

   rec.get('sys_id', current.u_scheduled_import.sys_id);

   SncTriggerSynchronizer.executeNow(rec);

}

function deleteCurrentAttachment(){

   var attachment = new GlideSysAttachment();

   var agr = attachment.getAllAttachments('u_bulk_load', current.sys_id);

   while (agr.next()){

   attachment.deleteAttachment(agr.getValue("sys_id"));

   }

}

function getDSSysID(){

   var gr = new GlideRecord('scheduled_import_set');

   gr.addQuery('sys_id', current.u_scheduled_import);

   gr.query();

   if (gr.next()){

   return gr.data_source;

   } else {

   gs.log("Bulk Upload: Failed to find scheduled import " + current.u_scheduled_import.name + ". Generated by UI Action on the Bulk Load module.");

   }

}]]></script>
        <show_insert>true</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>rthomas@tricorp-itsolutions.com</sys_created_by>
        <sys_created_on>2018-04-24 06:07:35</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>5f33c0b1dbb8df401bfdef92ca9619fd</sys_domain>
        <sys_domain_path/>
        <sys_id>88d75357dba1d3001bfdef92ca96190a</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Import</sys_name>
        <sys_overrides/>
        <sys_package display_value="TRICODE" source="x_4s_tricode">8912fb2adb789380e3a506e2ca961972</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="TRICODE">8912fb2adb789380e3a506e2ca961972</sys_scope>
        <sys_update_name>sys_ui_action_88d75357dba1d3001bfdef92ca96190a</sys_update_name>
        <sys_updated_by>rthomas@tricorp-itsolutions.com</sys_updated_by>
        <sys_updated_on>2018-04-24 21:31:39</sys_updated_on>
        <table>x_4s_tricode_bulk_load</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
</record_update>
